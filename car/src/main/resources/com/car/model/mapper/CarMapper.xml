<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.car.model.mapper.CarMapper">

	<resultMap type="Car" id="carMap">
		<id property="carindex" column="carindex" />
		<result property="model" column="model" />
		<result property="regdate" column="regdate" />
		<result property="carno" column="carno" />
		<result property="totaldistance" column="totaldistance" />
		<result property="totaloutcome" column="totaloutcome" />
		<result property="deleted" column="deleted" />

		<collection property="memberNo" column="memberNo"
			select="selectCarhistoryByCarindex" />
	</resultMap>


	<sql id="selectDefault">
		SELECT memberNo, carindex, model, regdate, carno,
		totaldistance, totaloutcome, deleted
		FROM Car
	</sql>

	<insert id="insertCar" parameterType="Car" useGeneratedKeys="true"
		keyProperty="carindex" keyColumn="carindex">
		INSERT INTO Car
		(
		model, carno, regdate, totaldistance, memberno)
		VALUES
		(#{model},	#{carno}, #{regdate}, #{totaldistance}, #{memberNo})
	</insert>
	<select id="selectCars" resultType="Car">
		SELECT *
		FROM Car
	</select>

	<select id="selectAllCarByCarno" parameterType="int" resultType="Car">
		<include refid="selectDefault" />
		WHERE memberNo = #{memberNo} And deleted = '0'
	</select>

	<select id="selectCarByCarno" parameterType="String" resultType="Car">
		<include refid="selectDefault" />
		WHERE carno = #{carno} And deleted = '0'
	</select>

	<select id="selectCarByCarindex" parameterType="int" resultType="Car">
		<include refid="selectDefault" />
		WHERE carindex = #{carindex} And deleted = '0'
	</select>

	<update id="updateCar" parameterType="Car">
		UPDATE Car
		SET model =
		#{model}, regdate = #{regdate}, carno = #{carno}, totaldistance =
		#{totaldistance}
		WHERE carindex = #{carindex}

	</update>
	<update id="deleteCar" parameterType="int">
		UPDATE Car SET deleted =
		'1' WHERE carindex = #{carindex}
	</update>

	<select id="selectCarByMemberno" parameterType="int" resultMap="carMap">
		select Car.*
		from Member
		join Car
		on Member.memberNo = Car.memberNo;
	</select>

	<select id="selectCarindexByMemberno" parameterType="int"
		resultMap="carMap">
		select carindex
		from Car
		where memberNo = #{memberNo}
	</select>
	<select id="selectTotalOutcomeByCarindex" parameterType="int" resultType="int">
		select IFNULL(sum(payment), 0)
	      from(
	      select Outcome.historyno, sum(Outcome.payment) as `payment`
	      from Outcome 
	      join Carhistory
	      on Outcome.historyno = Carhistory.historyno
	      join Car
	      on Carhistory.carindex = Car.carindex
	      where Carhistory.carindex= #{carindex}
	      group by historyno
	      union all
	      select Fuel.historyno, sum(Fuel.payment) as `payment`
	      from Fuel 
	      join Carhistory
	      on Carhistory.historyno = Fuel.historyno
	      join Car
	      on Carhistory.carindex = Car.carindex
	      where Carhistory.carindex= #{carindex}
	      group by historyno
	      ) `c`
	</select>
	
	<select id="selectCountFuelByRegdate" parameterType="hashMap" resultType="int">
		 select count(Fuel.historyno)
		from Fuel
		join Carhistory
		on Fuel.historyno = Carhistory.historyno 
		where regdate <![CDATA[  <  ]]>  #{endDate} and regdate <![CDATA[   >   ]]> #{startDate} 
		and Carhistory.carindex = #{carindex}
	
	
	</select>
	<select id="selectTotalRepairByCategory" parameterType="hashMap" resultType="int">
		select ifnull(sum(Outcome.payment), 0)
		from Outcome
		join Carhistory
		on Outcome.historyno = Carhistory.historyno
		where regdate <![CDATA[  <  ]]> #{endDate} and regdate <![CDATA[   >   ]]> #{startDate} and
		Carhistory.carindex = #{carindex} and Carhistory.category like '정비비'
	</select>
	<select id="selectTotalMaintainByCategory" parameterType="hashMap" resultType="int">
		select ifnull(sum(Outcome.payment), 0)
		from Outcome
		join Carhistory
		on Outcome.historyno = Carhistory.historyno
		where regdate <![CDATA[  <  ]]> #{endDate} and regdate <![CDATA[   >   ]]> #{startDate} and
		Carhistory.carindex = #{carindex} and Carhistory.category like '유지비'
	</select>

</mapper>